{
    "name": "server",
    "version": "1.0.0",
    "description": "",
    "main": "index.js",
    "scripts": {
        "pretest": "npm run build && npm run build:test",
        "test": "ts-node node_modules/jasmine/bin/jasmine --config=./jasmine.json",
        "style": "import-sort -l \"**/{src,tests,e2e}/**/*.ts\" && prettier --check \"**/{src,tests,e2e}/**/*.{*css,ts}\"",
        "style:fix": "import-sort --write \"{src,tests}/**/*.ts\" && prettier --write \"{src,tests}/**/*.ts\"",
        "lint": "tslint --config tslint.json --project .",
        "lint:fix": "tslint --config tslint.json --fix --project .",
        "prestart": "npm run build",
        "start": "env-cmd node dist/index.js",
        "prebuild": "rm -rf dist",
        "build": "tsc -p tsconfig.src.json",
        "prepublishOnly": "npm run test",
        "prepare": "npm run build",
        "build:test": "tsc -p tests/tsconfig.spec.json",
        "test:ci": "ts-node ./node_modules/jasmine-xml-reporter/bin/jasmine.js --config=./jasmine.json --junitreport --output=test_results/",
        "test:nyc": "nyc node_modules/ts-node/dist/bin.js node_modules/jasmine/bin/jasmine --config=./jasmine.json --cache=false",
        "init:env": "init-dev-env generate-dot-env example.env -f",
        "predocker:build": "npm run build",
        "docker:build": "cross-conf-env docker image build . -t $npm_package_config_imageRepo:$npm_package_version",
        "postdocker:build": "npm run docker:tag",
        "docker:tag": " cross-conf-env docker image tag $npm_package_config_imageRepo:$npm_package_version $npm_package_config_imageRepo:latest",
        "docker:stop": "cross-conf-env docker stop $npm_package_config_imageName || true",
        "docker:run": "run-s -c docker:stop docker:runHelper",
        "docker:runHelper": "cross-conf-env docker run -e NODE_ENV=local --rm --name $npm_package_config_imageName -d -p $npm_package_config_imagePort:$npm_package_config_internalContainerPort $npm_package_config_imageRepo",
        "predocker:publish": "echo Attention! Ensure `docker login` information is correct.",
        "docker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:$npm_package_version",
        "postdocker:publish": "cross-conf-env docker image push $npm_package_config_imageRepo:latest",
        "docker:taillogs": "echo Web Server Logs: && cross-conf-env docker logs -f $npm_package_config_imageName",
        "docker:open": "sleep 2 && cross-conf-env open-cli http://localhost:$npm_package_config_imagePort",
        "docker:debugmessage": "echo Docker Debug Completed Successfully! Hit Ctrl+C to terminate log tailing.",
        "docker:debug": "run-s -cs docker:build docker:run docker:open docker:debugmessage docker:taillogs"
    },
    "keywords": [],
    "author": "",
    "license": "ISC",
    "dependencies": {
        "bcryptjs": "^2.4.3",
        "cors": "^2.8.5",
        "document-ts": "^4.6.3",
        "express": "^4.0.0",
        "jsonwebtoken": "^8.5.1",
        "mongodb": "^3.5.5",
        "morgan": "^1.9.1",
        "swagger-jsdoc": "^3.5.0",
        "swagger-ui-express": "^4.1.3",
        "uuid": "^7.0.2"
    },
    "devDependencies": {
        "@istanbuljs/nyc-config-typescript": "^0.1.3",
        "@types/bcrypt": "^3.0.0",
        "@types/bcryptjs": "^2.4.2",
        "@types/cors": "^2.8.6",
        "@types/errorhandler": "1.5.0",
        "@types/express-serve-static-core": "^4.17.2",
        "@types/jasmine": "^3.5.9",
        "@types/jsonwebtoken": "^8.3.8",
        "@types/mongodb": "^3.5.2",
        "@types/morgan": "^1.9.0",
        "@types/node": "^13.9.1",
        "@types/swagger-jsdoc": "^3.0.2",
        "@types/swagger-ui-express": "^4.1.1",
        "@types/uuid": "^7.0.0",
        "copyfiles": "^2.2.0",
        "cross-conf-env": "^1.1.2",
        "dev-norms": "^1.7.0",
        "dotenv": "^8.2.0",
        "env-cmd": "^10.1.0",
        "import-sort": "^6.0.0",
        "import-sort-cli": "^6.0.0",
        "import-sort-parser-typescript": "^6.0.0",
        "import-sort-style-module": "^6.0.0",
        "init-dev-env": "^1.0.0",
        "jasmine": "^3.5.0",
        "jasmine-node": "^3.0.0",
        "jasmine-xml-reporter": "^1.2.1",
        "mongodb-memory-server": "^6.3.3",
        "npm-run-all": "^4.1.5",
        "nyc": "^14.1.1",
        "prettier": "^1.19.1",
        "rimraf": "^3.0.2",
        "source-map-support": "^0.5.16",
        "ts-node": "^8.6.2",
        "tslint": "^6.1.0",
        "tslint-config-prettier": "^1.18.0",
        "tslint-etc": "^1.10.1",
        "tslint-plugin-prettier": "^2.2.0",
        "typescript": "^3.8.3"
    },
    "importSort": {
        ".ts, .tsx": {
            "parser": "typescript",
            "style": "module",
            "options": {}
        }
    },
    "config": {
        "imageRepo": "garywige/lemon-mart-server",
        "imageName": "lemon-mart-server",
        "imagePort": "3000",
        "internalContainerPort": "3000"
    }
}
